#!/usr/bin/env ruby
# Usage: md2review [--parse-<extension>...] [--render-<extension>...] [<file>...]
# 
# Convert one or more Markdown files to Re:VIEW and write to standard output. With
# no <file> or when <file> is '-', read Markdown source text from standard input.
# With <extension>s, perform additional Markdown processing before writing output.

require 'md2review'
require 'md2review/version'

if ARGV.include?('--help')
  File.read(__FILE__).split("\n").grep(/^# /).each do |line|
    puts line[2..-1]
  end
  exit 0
end

root = File.expand_path('../../', __FILE__)
$:.unshift File.expand_path('lib', root)

require 'redcarpet'
require 'redcarpet/render/review'

render_extensions = {}
render_extensions[:link_in_footnote] = false
parse_extensions = {}
parse_extensions[:tables] = true
parse_extensions[:strikethrough] = true
parse_extensions[:fenced_code_blocks] = true
parse_extensions[:footnotes] = true

renderer = Redcarpet::Render::ReVIEW

ARGV.delete_if do |arg|
  if arg =~ /^--render-header-offset\s*=\s*([012])$/
    render_extensions[:header_offset] = $1.to_i
  elsif arg =~ /^--render-disable-image-caption$/
    render_extensions[:disable_image_caption] = true
  elsif arg =~ /^--render-([\w-]+)$/
    arg = $1.gsub('-', '_')
    render_extensions[arg.to_sym] = true
  elsif arg =~ /^--parse-([\w-]+)$/
    arg = $1.gsub('-', '_')
    parse_extensions[arg.to_sym] = true
  elsif arg =~ /^--version$/
    print MD2ReVIEW::VERSION, "\n"
    exit
  else
    false
  end
end

md = MD2ReVIEW::Markdown.new(render_extensions, parse_extensions)
md_doc = ARGF.read
review_doc = md.render(md_doc)
STDOUT.write review_doc
